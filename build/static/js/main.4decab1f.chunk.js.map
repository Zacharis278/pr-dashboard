{"version":3,"sources":["components/App.jsx","index.js"],"names":["Review","props","icon","state","className","src","author","avatarUrl","alt","login","PullRequest","status","statusClass","pullRequest","value","commits","edges","node","commit","err","moment","updatedAt","fromNow","title","repository","name","reviews","map","review","App","loaded","error","pullRequests","this","fetchData","setInterval","forEach","date","existingReview","isBefore","Object","values","axios","get","then","result","data","search","pr","resolveReviews","setState","console","log","status_bar","message","i","key","Component","ReactDOM","render","document","getElementById"],"mappings":"wUAMA,SAASA,EAAOC,GACZ,IAAIC,EAQJ,OANIA,EADgB,aAAhBD,EAAME,MACC,WACc,sBAAhBF,EAAME,MACJ,WAEA,kBAGP,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBAAgBC,IAAKJ,EAAMK,OAAOC,UAAWC,IAAKP,EAAMK,OAAOG,QAC9E,uBAAGL,UAAS,aAAQF,EAAR,mBAKxB,SAASQ,EAAYT,GACjB,IACIU,EACAC,EAFEC,EAAcZ,EAAMa,MAG1B,IACIH,EAASE,EAAYE,QAAQC,MAAM,GAAGC,KAAKC,OAAOP,OAAOR,MAC3D,MAAOgB,GACLR,EAAS,KAcb,OAVIC,EADW,YAAXD,EACc,iBACI,YAAXA,EACO,iBACI,YAAXA,EACO,iBAGA,iBAId,yBAAKP,UAAS,uBAAkBQ,IAC5B,yBAAKR,UAAU,gBAAgBC,IAAKQ,EAAYP,OAAOC,UAAWC,IAAKK,EAAYP,OAAOG,QAC1F,yBAAKL,UAAU,aACX,2BAAG,uCACH,uBAAGA,UAAU,eAAegB,IAAOP,EAAYQ,WAAWC,YAE9D,wBAAIlB,UAAU,SAASS,EAAYU,OACnC,yBAAKnB,UAAU,WACX,yBAAKA,UAAU,aAAaS,EAAYW,WAAWC,MAClDZ,EAAYa,QAAQV,MAAMW,IAAI,SAACC,GAC5B,OAAO,kBAAC5B,EAAD,CAAQM,OAAQsB,EAAOX,KAAKX,OAAQH,MAAOyB,EAAOX,KAAKd,Y,IAoFnE0B,E,YA3EX,WAAY5B,GAAQ,IAAD,8BACf,4CAAMA,KACDE,MAAQ,CACT2B,QAAQ,EACRC,MAAO,KACPC,aAAc,IALH,E,iFASE,IAAD,OAChBC,KAAKC,YACLC,YAAY,kBAAM,EAAKD,aAAa,Q,qCAGzBrB,GACX,IAAIa,EAAU,GACdb,EAAYa,QAAQV,MAAMoB,QAAQ,SAAAR,GAC9B,IAAMtB,EAASsB,EAAOX,KAAKX,OAAOG,MAC5B4B,EAAOjB,IAAOQ,EAAOX,KAAKI,WAC1BiB,EAAiBZ,EAAQpB,GAC1BgC,IAAkBlB,IAAOkB,EAAerB,KAAKI,WAAWkB,SAASF,KAClEX,EAAQpB,GAAUsB,KAG1Bf,EAAYa,QAAQV,MAAQwB,OAAOC,OAAOf,K,kCAGjC,IAAD,OACRgB,IAAMC,IAAI,WAAWC,KAAK,SAACC,GACvB,IACI,IAAIb,EAAea,EAAOC,KAAKA,KAAKC,OAAO/B,MAC3CgB,EAAaI,QAAQ,SAAAY,GACjB,EAAKC,eAAeD,EAAG/B,QAE3B,EAAKiC,SAAS,CACVpB,QAAQ,EACRC,MAAO,KACPC,aAAcA,IAEpB,MAAMb,GACJ,EAAK+B,SAAS,CACVpB,QAAQ,EACRC,MAAOZ,MAIhB,SAACA,GACAgC,QAAQC,IAAIjC,GACZ,EAAK+B,SAAS,CACVpB,QAAQ,EACRC,MAAOZ,Q,+BAKT,IAAD,EACmCc,KAAK9B,MAArC2B,EADH,EACGA,OAAQC,EADX,EACWA,MAAOC,EADlB,EACkBA,aAEnBqB,EAAa,KAMjB,OALItB,EACAsB,EAAa,yBAAKjD,UAAU,oBAAf,UAA0C2B,EAAMuB,SACrDxB,IACRuB,EAAa,yBAAKjD,UAAU,mBAAf,eAGb,6BACKiD,EACArB,EAAaL,IAAI,SAACqB,EAAGO,GAClB,OAAO,kBAAC7C,EAAD,CAAa8C,IAAKD,EAAGzC,MAAOkC,EAAG/B,c,GAtExCwC,aCzDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4decab1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport moment from 'moment'\nimport '../assets/App.css'\n\n\nfunction Review(props) {\n    var icon;\n    if (props.state === 'APPROVED')\n        icon = 'fa-check'\n    else if (props.state === 'CHANGES_REQUESTED')\n        icon = 'fa-times'\n    else\n        icon = 'fa-commenting-o'\n\n    return (\n        <div className=\"review\">\n            <img className=\"review-avatar\" src={props.author.avatarUrl} alt={props.author.login}></img>\n            <i className={`fa ${icon} review-icon`}></i>\n        </div>\n    )\n}\n\nfunction PullRequest(props) {\n    const pullRequest = props.value\n    let status;\n    var statusClass;\n    try {\n        status = pullRequest.commits.edges[0].node.commit.status.state;\n    } catch (err) {\n        status = null;\n    }\n\n    if (status === 'SUCCESS') {\n        statusClass = 'status-success'\n    } else if (status === 'FAILURE') {\n        statusClass = 'status-failure'\n    } else if (status === 'PENDING') {\n        statusClass = 'status-pending'\n    }\n    else {\n        statusClass = 'status-unknown'\n    }\n\n    return (\n        <div className={`pr-container ${statusClass}`}>\n            <img className=\"author-avatar\" src={pullRequest.author.avatarUrl} alt={pullRequest.author.login}></img>\n            <div className=\"date-info\">\n                <p><b>Updated</b></p>\n                <p className=\"dateUpdated\">{moment(pullRequest.updatedAt).fromNow()}</p>\n            </div>\n            <h2 className=\"title\">{pullRequest.title}</h2>\n            <div className=\"details\">\n                <div className=\"repo-name\">{pullRequest.repository.name}</div>\n                {pullRequest.reviews.edges.map((review) => {\n                    return <Review author={review.node.author} state={review.node.state}></Review>\n                })}\n            </div>\n        </div>\n    )\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            error: null,\n            pullRequests: [],\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData();\n        setInterval(() => this.fetchData(), 1000*60*2);\n    }\n\n    resolveReviews(pullRequest) {\n        var reviews = {}\n        pullRequest.reviews.edges.forEach(review => {\n            const author = review.node.author.login;\n            const date = moment(review.node.updatedAt);\n            const existingReview = reviews[author]\n            if (!existingReview || moment(existingReview.node.updatedAt).isBefore(date)) {\n                reviews[author] = review;\n            }\n        })\n        pullRequest.reviews.edges = Object.values(reviews);\n    }\n\n    fetchData() {\n        axios.get('/query/').then((result) => {\n            try {\n                var pullRequests = result.data.data.search.edges;\n                pullRequests.forEach(pr => {\n                    this.resolveReviews(pr.node)\n                });\n                this.setState({\n                    loaded: true,\n                    error: null,\n                    pullRequests: pullRequests,\n                })\n            } catch(err) {\n                this.setState({\n                    loaded: true,\n                    error: err,\n                });\n            }\n            \n        }, (err) => {\n            console.log(err);\n            this.setState({\n                loaded: true,\n                error: err,\n            });\n        });\n    }\n\n    render() {\n        const { loaded, error, pullRequests } = this.state;\n       \n        let status_bar = null;\n        if (error) {\n            status_bar = <div className=\"status-bar error\">Error: {error.message}</div>\n        } else if (!loaded) {\n            status_bar = <div className=\"status-bar info\">Loading...</div>\n        }\n        return (\n            <div>\n                {status_bar} \n                {pullRequests.map((pr,i) => {\n                    return <PullRequest key={i} value={pr.node}></PullRequest>\n                })}\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}